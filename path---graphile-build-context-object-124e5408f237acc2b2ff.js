webpackJsonp([69504633912515],{364:function(n,s){n.exports={data:{remark:{html:'<h2 id="the-context-object"><a href="#the-context-object" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>The <code>Context</code> Object</h2>\n<p>Whereas the <code>Build</code> object is the same for all hooks (except the <code>build</code> hook\nwhich constructs it) within an individual build, the <code>Context</code> object changes for\neach hook. Different hooks have different values available to them on the <code>Context</code>\nobject and sadly we\'ve not documented all these yet so you may have to do some\ninspection!</p>\n<p>The main ones are:</p>\n<h3 id="scope"><a href="#scope" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>scope</code></h3>\n<p>An object based on the third argument to <code>newWithHooks</code> or <code>fieldWithHooks</code> -\nthis is useful for filtering which objects a particular hook should apply to.</p>\n<p>For deeper hooks (such as <code>GraphQLObjectType:fields:field</code>) the scope from\nshallower hooks (such as <code>GraphQLObjectType</code>) are merged in.</p>\n<p>For example you might use a hook such as this to add a description to the\n<code>clientMutationId</code> field on all mutation input objects:</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>builder<span class="token punctuation">.</span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token string">"GraphQLInputObjectType:fields:field"</span><span class="token punctuation">,</span>\n  <span class="token punctuation">(</span>\n    field<span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> extend <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="gatsby-highlight-code-line">    <span class="token punctuation">{</span> scope<span class="token punctuation">:</span> <span class="token punctuation">{</span> isMutationInput<span class="token punctuation">,</span> fieldName <span class="token punctuation">}</span> <span class="token punctuation">}</span>\n</span>  <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n<span class="gatsby-highlight-code-line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>\n</span><span class="gatsby-highlight-code-line">      <span class="token operator">!</span>isMutationInput <span class="token operator">||</span>\n</span><span class="gatsby-highlight-code-line">      fieldName <span class="token operator">!==</span> <span class="token string">"clientMutationId"</span> <span class="token operator">||</span>\n</span><span class="gatsby-highlight-code-line">      field<span class="token punctuation">.</span>description <span class="token operator">!=</span> <span class="token keyword">null</span>\n</span><span class="gatsby-highlight-code-line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n</span>      <span class="token keyword">return</span> field<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token function">extend</span><span class="token punctuation">(</span>field<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      description<span class="token punctuation">:</span> <span class="token string">"An arbitrary string value with no semantic meaning. "</span> <span class="token operator">+</span>\n        <span class="token string">"Will be included in the payload verbatim. "</span> <span class="token operator">+</span>\n        <span class="token string">"May be used to track mutations by the client."</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<h3 id="self"><a href="#self" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>Self</code></h3>\n<p>Whilst only available on hooks that are called after the object is created\n(e.g. <code>GraphQLObjectType:fields</code>), this field is useful because it contains the\nobject that has been created; allowing circular references to be built. A\ncommon use-case for this is the root <code>Query</code> object referencing itself with the\n<code>query</code> field to work around some issues in Relay 1.</p>\n<h3 id="fieldwithhooksfieldname-spec-scope--"><a href="#fieldwithhooksfieldname-spec-scope--" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>fieldWithHooks(fieldName, spec, scope = {})</code></h3>\n<p>Available on hooks <code>GraphQLObjectType:fields</code> and\n<code>GraphQLInputObjectType:fields</code>, this function is useful for adding hooks early\n(for example if you need to call <code>addDataGenerator(...)</code>). If you don\'t call\nthis, it will be called for you at a later time.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>builder<span class="token punctuation">.</span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token string">"GraphQLInputObjectType:fields"</span><span class="token punctuation">,</span>\n  <span class="token punctuation">(</span>\n    fields<span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> extend<span class="token punctuation">,</span> resolveAlias <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="gatsby-highlight-code-line">    <span class="token punctuation">{</span> fieldWithHooks <span class="token punctuation">}</span>\n</span>  <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// TODO: if (...) return fields;</span>\n    <span class="token keyword">return</span> <span class="token function">extend</span><span class="token punctuation">(</span>fields<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n<span class="gatsby-highlight-code-line">      id<span class="token punctuation">:</span> <span class="token function">fieldWithHooks</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> addDataGenerator <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n</span><span class="gatsby-highlight-code-line">        <span class="token function">addDataGenerator</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> alias <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n</span><span class="gatsby-highlight-code-line">          <span class="token keyword">return</span> <span class="token punctuation">{</span>\n</span><span class="gatsby-highlight-code-line">            map<span class="token punctuation">:</span> obj <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>alias<span class="token punctuation">]</span><span class="token punctuation">:</span> obj<span class="token punctuation">.</span>ID <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n</span><span class="gatsby-highlight-code-line">          <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span><span class="gatsby-highlight-code-line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span><span class="gatsby-highlight-code-line">        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n</span><span class="gatsby-highlight-code-line">          type<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">GraphQLNonNull</span><span class="token punctuation">(</span>GraphQLString<span class="token punctuation">)</span><span class="token punctuation">,</span>\n</span><span class="gatsby-highlight-code-line">          resolve<span class="token punctuation">:</span> resolveAlias<span class="token punctuation">,</span>\n</span><span class="gatsby-highlight-code-line">        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span><span class="gatsby-highlight-code-line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>See also: <a href="/graphile-build/look-ahead/#when-creating-an-individual-field">Look ahead</a>.</p>\n<p>TODO: add more context properties</p>',frontmatter:{path:"/graphile-build/context-object/",title:"The Context Object"}},nav:{edges:[{node:{id:"/Users/benjiegillam/Documents/graphile.org/src/data/nav.json absPath of file [0] >>> JSON",name:"graphile-build",sections:[{id:"guides",title:"Overview"},{id:"library-reference",title:"Using the Library"},{id:"plugin-reference",title:"Building a Plugin"}],pages:[{to:"/graphile-build/getting-started/",title:"Getting Started",sectionId:"guides"},{to:"/graphile-build/plugins/",title:"Plugins",sectionId:"guides"},{to:"/graphile-build/hooks/",title:"Hooks",sectionId:"guides"},{to:"/graphile-build/look-ahead/",title:"Look Ahead",sectionId:"guides"},{to:"/graphile-build/graphile-build/",title:"graphile-build",sectionId:"library-reference"},{to:"/graphile-build/schema-builder/",title:"SchemaBuilder",sectionId:"library-reference"},{to:"/graphile-build/plugin-options/",title:"Options",sectionId:"library-reference"},{to:"/graphile-build/default-plugins/",title:"Default Plugins",sectionId:"library-reference"},{to:"/graphile-build/omitting-plugins/",title:"Omitting Plugins",sectionId:"guides"},{to:"/graphile-build/all-hooks/",title:"All Hooks",sectionId:"plugin-reference"},{to:"/graphile-build/build-object/",title:"Build Object",sectionId:"plugin-reference"},{to:"/graphile-build/context-object/",title:"Context Object",sectionId:"plugin-reference"},{to:"/graphile-build/schema-builder/",title:"SchemaBuilder",sectionId:"plugin-reference"}]}},{node:{id:"/Users/benjiegillam/Documents/graphile.org/src/data/nav.json absPath of file [1] >>> JSON",name:"postgraphile",sections:[{id:"overview",title:"Overview"},{id:"guides",title:"Guides"},{id:"usage",title:"Usage"}],pages:[{to:"/postgraphile/introduction/",title:"Introduction",sectionId:"overview"},{to:"/postgraphile/quick-start-guide/",title:"Quick Start Guide",sectionId:"overview"},{to:"/postgraphile/evaluating/",title:"Evaluating for your Project",sectionId:"guides"},{to:"/postgraphile/requirements/",title:"Requirements",sectionId:"overview"},{to:"/postgraphile/performance/",title:"Performance",sectionId:"overview"},{to:"/postgraphile/connections/",title:"Connections",sectionId:"overview"},{to:"/postgraphile/filtering/",title:"Filtering",sectionId:"overview"},{to:"/postgraphile/relations/",title:"Relations",sectionId:"overview"},{to:"/postgraphile/crud-mutations/",title:"CRUD Mutations",sectionId:"overview"},{to:"/postgraphile/computed-columns/",title:"Computed Columns",sectionId:"overview"},{to:"/postgraphile/custom-queries/",title:"Custom Queries",sectionId:"overview"},{to:"/postgraphile/custom-mutations/",title:"Custom Mutations",sectionId:"overview"},{to:"/postgraphile/security/",title:"Security",sectionId:"overview"},{to:"/postgraphile/introspection/",title:"Introspection",sectionId:"overview"},{to:"/postgraphile/extending/",title:"Extending PostGraphile",sectionId:"overview"},{to:"/postgraphile/jwt-guide/",title:"PostGraphile JWT Guide",sectionId:"guides"},{to:"/postgraphile/default-role/",title:"The Default Role",sectionId:"guides"},{to:"/postgraphile/procedures/",title:"PostgreSQL Procedures",sectionId:"guides"},{to:"/postgraphile/postgresql-schema-design/",title:"PostgreSQL Schema Design",sectionId:"guides"},{to:"/postgraphile/postgresql-indexes/",title:"PostgreSQL Indexes",sectionId:"guides"},{to:"/postgraphile/v4-new-features/",title:"v4 Feature Guide",sectionId:"guides"},{to:"/postgraphile/v3-migration/",title:"v3 → v4 Migration Guide",sectionId:"guides"},{to:"/postgraphile/usage-cli/",title:"CLI Usage",sectionId:"usage"},{to:"/postgraphile/usage-library/",title:"Library Usage",sectionId:"usage"},{to:"/postgraphile/usage-schema/",title:"Schema-only Usage",sectionId:"usage"}]}},{node:{id:"/Users/benjiegillam/Documents/graphile.org/src/data/nav.json absPath of file [2] >>> JSON",name:"graphile-build-pg",sections:[{id:"usage",title:"Usage"}],pages:[{to:"/postgraphile/settings/",title:"Settings",sectionId:"usage"}]}}]}},pathContext:{layout:"page"}}}});
//# sourceMappingURL=path---graphile-build-context-object-124e5408f237acc2b2ff.js.map