{"version":3,"sources":["webpack:///path---docs-plugins-3f87080ab344392a2499.js","webpack:///./.cache/json/docs-plugins.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/docs-plugins.json","module","exports","data","remark","html","frontmatter","path","title","nav","edges","node","id","to","pathContext","layout"],"mappings":"AAAAA,cAAc,qBAERC,sEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,QACAC,KAAA,6qYACAC,aACAC,KAAA,iBACAC,MAAA,YAGAC,KACAC,QAEAC,MACAC,GAAA,uGACAC,GAAA,yBACAL,MAAA,qBAIAG,MACAC,GAAA,uGACAC,GAAA,iBACAL,MAAA,aAIAG,MACAC,GAAA,uGACAC,GAAA,eACAL,MAAA,WAIAG,MACAC,GAAA,uGACAC,GAAA,oBACAL,MAAA,kBAMAM,aACAC,OAAA","file":"path---docs-plugins-3f87080ab344392a2499.js","sourcesContent":["webpackJsonp([3300098092675464700],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/docs-plugins.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"remark\": {\n\t\t\t\t\"html\": \"<h2 id=\\\"plugins\\\"><a href=\\\"#plugins\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Plugins</h2>\\n<h3 id=\\\"loading-plugins\\\"><a href=\\\"#loading-plugins\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Loading Plugins</h3>\\n<p>GraphQL-Build plugins are simple functions that interact with the\\n<code>SchemaBuilder</code> (TODO: link to SchemaBuilder docs), for example adding hooks.\\nWhen you perform <code>buildSchema(plugins)</code> we create a new SchemaBuilder instance\\nand then load each of the plugins against it.</p>\\n<p>The plugins are loaded in the order specified, if a plugin returns a Promise\\n(e.g. an asynchronous plugin) then we will wait for that promise to resolve\\nbefore continuing to load the next plugin, otherwise we will assume the plugin\\nis synchronous.</p>\\n<p>An example of a plugin that does nothing is this no-op plugin:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">NoopPlugin</span><span class=\\\"token punctuation\\\">(</span>builder<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I don't do anything\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>which you can load into your schema like so:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> buildSchema<span class=\\\"token punctuation\\\">,</span> defaultPlugins <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"graphql-build\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> printSchema <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"graphql/utilities\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">buildSchema</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span>defaultPlugins<span class=\\\"token punctuation\\\">,</span> NoopPlugin<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>schema <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">printSchema</span><span class=\\\"token punctuation\\\">(</span>schema<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<details>\\n<summary>View output</summary>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>I don't do anything\\n# An object with a globally unique `ID`.\\ninterface Node {\\n  # A globally unique identifier. Can be used in various places throughout the system to identify this single value.\\n  id: ID!\\n}\\n\\n# The root query type which gives access points into the data universe.\\ntype Query implements Node {\\n  # Exposes the root query type nested one level down. This is helpful for Relay 1\\n  # which can only query top level fields if they are in a particular form.\\n  query: Query!\\n\\n  # The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.\\n  id: ID!\\n\\n  # Fetches an object given its globally unique `ID`.\\n  node(\\n    # The globally unique `ID`.\\n    id: ID!\\n  ): Node\\n}</code></pre>\\n      </div>\\n</details>\\n<h3 id=\\\"plugin-arguments\\\"><a href=\\\"#plugin-arguments\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Plugin arguments</h3>\\n<p>Plugins are called with just two arguments:</p>\\n<ul>\\n<li><code>builder</code> - the instance of <code>SchemaBuilder</code> the plugin is being loaded against</li>\\n<li><code>options</code> - the options that were passed to <code>buildSchema(plugins, options)</code> (or <code>getBuilder(plugins, options)</code>)</li>\\n</ul>\\n<h3 id=\\\"plugin-actions\\\"><a href=\\\"#plugin-actions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Plugin actions:</h3>\\n<p>Whilst a plugin is being executed it can perform the following actions on the\\n<code>builder</code> object (its first argument):</p>\\n<h4 id=\\\"builderhookname-fn-register-a-hook\\\"><a href=\\\"#builderhookname-fn-register-a-hook\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>builder.hook(name, fn)</code>: Register a hook</h4>\\n<p>The plugin may add a hook by calling <code>builder.hook(hookName, hookFunction)</code>. </p>\\n<p>Example: this hook will log the name of each GraphQLObjectType that is built:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">GraphQLObjectTypeLogNamePlugin</span><span class=\\\"token punctuation\\\">(</span>builder<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  builder<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hook</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'GraphQLObjectType'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>spec<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token string\\\">\\\"A new GraphQLObjectType is being constructed with name: \\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      spec<span class=\\\"token punctuation\\\">.</span>name\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4 id=\\\"builderregisterwatcherwatcher-unwatcher-add-watch-mode-event-listeners\\\"><a href=\\\"#builderregisterwatcherwatcher-unwatcher-add-watch-mode-event-listeners\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>builder.registerWatcher(watcher, unwatcher)</code>: Add watch-mode event listeners</h4>\\n<p>Registers two functions: one to be called if/when schema watching begins, and\\nanother to be called if/when schema watching ends (to clean up). Each function\\nis passed one argument: the function to call when a change occurs</p>\\n<p>Schema watching only occurs when you opt into that functionality.</p>\\n<p>TODO: document further (ref: <a href=\\\"https://github.com/postgraphql/graphql-build/blob/3d5b8dd8a280397744f03fbac60319e9f782a038/packages/graphql-build/__tests__/watch.test.js#L31-L38\\\">https://github.com/postgraphql/graphql-build/blob/3d5b8dd8a280397744f03fbac60319e9f782a038/packages/graphql-build/<strong>tests</strong>/watch.test.js#L31-L38</a>)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>builder<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">registerWatcher</span><span class=\\\"token punctuation\\\">(</span>\\n  triggerRebuild <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    eventEmitter<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"change\\\"</span><span class=\\\"token punctuation\\\">,</span> triggerRebuild<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  triggerRebuild <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    eventEmitter<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"change\\\"</span><span class=\\\"token punctuation\\\">,</span> triggerRebuild<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"whats-next\\\"><a href=\\\"#whats-next\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What's next?</h3>\\n<p>A plugin that just does logging might not be the most useful, lets find out what hooks are available:</p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"path\": \"/docs/plugins/\",\n\t\t\t\t\t\"title\": \"Plugins\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"nav\": {\n\t\t\t\t\"edges\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"id\": \"/Users/benjiegillam/Documents/graphql-build.github.io/src/data/nav.json absPath of file [0] >>> JSON\",\n\t\t\t\t\t\t\t\"to\": \"/docs/getting-started/\",\n\t\t\t\t\t\t\t\"title\": \"Getting Started\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"id\": \"/Users/benjiegillam/Documents/graphql-build.github.io/src/data/nav.json absPath of file [1] >>> JSON\",\n\t\t\t\t\t\t\t\"to\": \"/docs/plugins/\",\n\t\t\t\t\t\t\t\"title\": \"Plugins\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"id\": \"/Users/benjiegillam/Documents/graphql-build.github.io/src/data/nav.json absPath of file [2] >>> JSON\",\n\t\t\t\t\t\t\t\"to\": \"/docs/hooks/\",\n\t\t\t\t\t\t\t\"title\": \"Hooks\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"id\": \"/Users/benjiegillam/Documents/graphql-build.github.io/src/data/nav.json absPath of file [3] >>> JSON\",\n\t\t\t\t\t\t\t\"to\": \"/docs/look-ahead/\",\n\t\t\t\t\t\t\t\"title\": \"Look Ahead\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"layout\": \"page\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-plugins-3f87080ab344392a2499.js","module.exports = {\n\t\"data\": {\n\t\t\"remark\": {\n\t\t\t\"html\": \"<h2 id=\\\"plugins\\\"><a href=\\\"#plugins\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Plugins</h2>\\n<h3 id=\\\"loading-plugins\\\"><a href=\\\"#loading-plugins\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Loading Plugins</h3>\\n<p>GraphQL-Build plugins are simple functions that interact with the\\n<code>SchemaBuilder</code> (TODO: link to SchemaBuilder docs), for example adding hooks.\\nWhen you perform <code>buildSchema(plugins)</code> we create a new SchemaBuilder instance\\nand then load each of the plugins against it.</p>\\n<p>The plugins are loaded in the order specified, if a plugin returns a Promise\\n(e.g. an asynchronous plugin) then we will wait for that promise to resolve\\nbefore continuing to load the next plugin, otherwise we will assume the plugin\\nis synchronous.</p>\\n<p>An example of a plugin that does nothing is this no-op plugin:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">NoopPlugin</span><span class=\\\"token punctuation\\\">(</span>builder<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I don't do anything\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>which you can load into your schema like so:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> buildSchema<span class=\\\"token punctuation\\\">,</span> defaultPlugins <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"graphql-build\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> printSchema <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"graphql/utilities\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">buildSchema</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span>defaultPlugins<span class=\\\"token punctuation\\\">,</span> NoopPlugin<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>schema <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">printSchema</span><span class=\\\"token punctuation\\\">(</span>schema<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<details>\\n<summary>View output</summary>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>I don't do anything\\n# An object with a globally unique `ID`.\\ninterface Node {\\n  # A globally unique identifier. Can be used in various places throughout the system to identify this single value.\\n  id: ID!\\n}\\n\\n# The root query type which gives access points into the data universe.\\ntype Query implements Node {\\n  # Exposes the root query type nested one level down. This is helpful for Relay 1\\n  # which can only query top level fields if they are in a particular form.\\n  query: Query!\\n\\n  # The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.\\n  id: ID!\\n\\n  # Fetches an object given its globally unique `ID`.\\n  node(\\n    # The globally unique `ID`.\\n    id: ID!\\n  ): Node\\n}</code></pre>\\n      </div>\\n</details>\\n<h3 id=\\\"plugin-arguments\\\"><a href=\\\"#plugin-arguments\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Plugin arguments</h3>\\n<p>Plugins are called with just two arguments:</p>\\n<ul>\\n<li><code>builder</code> - the instance of <code>SchemaBuilder</code> the plugin is being loaded against</li>\\n<li><code>options</code> - the options that were passed to <code>buildSchema(plugins, options)</code> (or <code>getBuilder(plugins, options)</code>)</li>\\n</ul>\\n<h3 id=\\\"plugin-actions\\\"><a href=\\\"#plugin-actions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Plugin actions:</h3>\\n<p>Whilst a plugin is being executed it can perform the following actions on the\\n<code>builder</code> object (its first argument):</p>\\n<h4 id=\\\"builderhookname-fn-register-a-hook\\\"><a href=\\\"#builderhookname-fn-register-a-hook\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>builder.hook(name, fn)</code>: Register a hook</h4>\\n<p>The plugin may add a hook by calling <code>builder.hook(hookName, hookFunction)</code>. </p>\\n<p>Example: this hook will log the name of each GraphQLObjectType that is built:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">GraphQLObjectTypeLogNamePlugin</span><span class=\\\"token punctuation\\\">(</span>builder<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  builder<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hook</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'GraphQLObjectType'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>spec<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token string\\\">\\\"A new GraphQLObjectType is being constructed with name: \\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      spec<span class=\\\"token punctuation\\\">.</span>name\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4 id=\\\"builderregisterwatcherwatcher-unwatcher-add-watch-mode-event-listeners\\\"><a href=\\\"#builderregisterwatcherwatcher-unwatcher-add-watch-mode-event-listeners\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>builder.registerWatcher(watcher, unwatcher)</code>: Add watch-mode event listeners</h4>\\n<p>Registers two functions: one to be called if/when schema watching begins, and\\nanother to be called if/when schema watching ends (to clean up). Each function\\nis passed one argument: the function to call when a change occurs</p>\\n<p>Schema watching only occurs when you opt into that functionality.</p>\\n<p>TODO: document further (ref: <a href=\\\"https://github.com/postgraphql/graphql-build/blob/3d5b8dd8a280397744f03fbac60319e9f782a038/packages/graphql-build/__tests__/watch.test.js#L31-L38\\\">https://github.com/postgraphql/graphql-build/blob/3d5b8dd8a280397744f03fbac60319e9f782a038/packages/graphql-build/<strong>tests</strong>/watch.test.js#L31-L38</a>)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>builder<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">registerWatcher</span><span class=\\\"token punctuation\\\">(</span>\\n  triggerRebuild <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    eventEmitter<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"change\\\"</span><span class=\\\"token punctuation\\\">,</span> triggerRebuild<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  triggerRebuild <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    eventEmitter<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"change\\\"</span><span class=\\\"token punctuation\\\">,</span> triggerRebuild<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"whats-next\\\"><a href=\\\"#whats-next\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What's next?</h3>\\n<p>A plugin that just does logging might not be the most useful, lets find out what hooks are available:</p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"path\": \"/docs/plugins/\",\n\t\t\t\t\"title\": \"Plugins\"\n\t\t\t}\n\t\t},\n\t\t\"nav\": {\n\t\t\t\"edges\": [\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"id\": \"/Users/benjiegillam/Documents/graphql-build.github.io/src/data/nav.json absPath of file [0] >>> JSON\",\n\t\t\t\t\t\t\"to\": \"/docs/getting-started/\",\n\t\t\t\t\t\t\"title\": \"Getting Started\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"id\": \"/Users/benjiegillam/Documents/graphql-build.github.io/src/data/nav.json absPath of file [1] >>> JSON\",\n\t\t\t\t\t\t\"to\": \"/docs/plugins/\",\n\t\t\t\t\t\t\"title\": \"Plugins\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"id\": \"/Users/benjiegillam/Documents/graphql-build.github.io/src/data/nav.json absPath of file [2] >>> JSON\",\n\t\t\t\t\t\t\"to\": \"/docs/hooks/\",\n\t\t\t\t\t\t\"title\": \"Hooks\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"id\": \"/Users/benjiegillam/Documents/graphql-build.github.io/src/data/nav.json absPath of file [3] >>> JSON\",\n\t\t\t\t\t\t\"to\": \"/docs/look-ahead/\",\n\t\t\t\t\t\t\"title\": \"Look Ahead\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"layout\": \"page\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-plugins.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/docs-plugins.json\n// module chunks = 3300098092675464700"],"sourceRoot":""}