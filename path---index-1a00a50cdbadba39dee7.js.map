{"version":3,"sources":["webpack:///path---index-1a00a50cdbadba39dee7.js","webpack:///./.cache/json/index.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/index.json","module","exports","data","remark","html","frontmatter","path","title","next","nextText","prev","prevText","pathContext","layout"],"mappings":"AAAAA,cAAc,qBAERC,+DACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,QACAC,KAAA,8rcACAC,aACAC,KAAA,IACAC,MAAA,0CACAC,KAAA,KACAC,SAAA,KACAC,KAAA,KACAC,SAAA,QAIAC,aACAC,OAAA","file":"path---index-1a00a50cdbadba39dee7.js","sourcesContent":["webpackJsonp([9347362237655822000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/index.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"remark\": {\n\t\t\t\t\"html\": \"<header>\\n<div class='container'>\\n<h1 id=\\\"build-powerful-graphql-apis\\\"><a href=\\\"#build-powerful-graphql-apis\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Build Powerful GraphQL APIs</h1>\\n<p class='lead'>\\nGraphQL-Build provides you with a framework to build high-performance extensible GraphQL APIs by combining plugins and using advanced look-ahead features.\\n</p>\\n<div class='row'>\\n<div class='col-lg-6 col-12'>\\n<p>Build your schema with plugins  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token function\\\">buildSchema</span><span class=\\\"token punctuation\\\">(</span>plugins<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>type Person <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># @deprecated Use 'name' instead</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># The person's first name</span>\\n  <span class=\\\"token attr-name\\\">firstName</span><span class=\\\"token punctuation\\\">:</span> String\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># @deprecated Use 'name' instead</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># The person's last name</span>\\n  <span class=\\\"token attr-name\\\">lastName</span><span class=\\\"token punctuation\\\">:</span> String\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#...</span>\\n</code></pre>\\n      </div>\\n</div><!-- /col-6 -->\\n<div class='col-lg-6 col-12'>\\n<p>Transform your schema with ease  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>plugins<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>DeprecationFromCommentPlugin<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>type Person <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># The person's first name</span>\\n  <span class=\\\"token attr-name\\\">firstName</span><span class=\\\"token punctuation\\\">:</span> String <span class=\\\"token directive function\\\">@deprecated</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token attr-name\\\">reason</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Use 'name' instead\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># The person's last name</span>\\n  <span class=\\\"token attr-name\\\">lastName</span><span class=\\\"token punctuation\\\">:</span> String <span class=\\\"token directive function\\\">@deprecated</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token attr-name\\\">reason</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Use 'name' instead\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#...</span>\\n</code></pre>\\n      </div>\\n</div><!-- /col-6 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</header>\\n<!-- **************************************** -->\\n<section class='odd'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"easy-integration\\\"><a href=\\\"#easy-integration\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Easy Integration</h1>\\n<p class='lead'>\\nIf you're already using the reference implementation of GraphQL from Facebook then you can add hooks to your schema with ease:\\n</p>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12 col-lg-6'>\\n<p><code>graphql</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"gatsby-highlight-code-line\\\"><span class=\\\"token keyword\\\">const</span> MyType <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">GraphQLObjectType</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n</span>  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'MyType'</span><span class=\\\"token punctuation\\\">,</span>\\n  fields<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    field1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      type<span class=\\\"token punctuation\\\">:</span> GraphQLString<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n</code></pre>\\n      </div>\\n</div><!-- /col-6 -->\\n<div class='col-12 col-lg-6'>\\n<p><code>graphql-build</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"gatsby-highlight-code-line\\\"><span class=\\\"token keyword\\\">const</span> MyType <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">newWithHooks</span><span class=\\\"token punctuation\\\">(</span>GraphQLObjectType<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n</span>  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'MyType'</span><span class=\\\"token punctuation\\\">,</span>\\n  fields<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    field1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      type<span class=\\\"token punctuation\\\">:</span> GraphQLString<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n</code></pre>\\n      </div>\\n</div><!-- /col-6 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</section><!-- /odd -->\\n<!-- **************************************** -->\\n<section class='even'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"fully-compatible\\\"><a href=\\\"#fully-compatible\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Fully compatible</h1>\\n<p class='lead'>\\nWe use the reference GraphQL implementation under the hood, so you know we're spec compliant.\\n</p>\\n<p> We do not use private APIs to manipulate the generated schema - only the public interfaces. You can use regular GraphQL objects in your generated Schema - you only need hooks for the parts you want callbacks for.</p>\\n</div><!-- /col-12 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</section><!-- /even -->\\n<!-- **************************************** -->\\n<section class='odd'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"first-class-schema-watching\\\"><a href=\\\"#first-class-schema-watching\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>First class schema watching</h1>\\n<p class='lead'>\\nAutomatically update your running GraphQL schema without the need to restart the server.\\n</p>\\n<p>For example: when your underlying data structure changes your GraphQL-Build plugins can trigger a rebuild event and you'll automatically be supplied with a fresh new GraphQL schema to replace the out-of-date one - no need to restart your server!</p>\\n</div><!-- /col-12 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</section><!-- /odd -->\\n<!-- **************************************** -->\\n<section class='even'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"performance-baked-in\\\"><a href=\\\"#performance-baked-in\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Performance baked in</h1>\\n<p class='lead'>\\nSay Goodbye to the N+1 problem; fewer round-trips means higher performance.\\n</p>\\n<p>By using our lookahead tools your code can know what's coming and make sure it requests the correct fields ahead of time, leading to fewer roundtrips and higher performance.</p>\\n<p>PostGraphQL v4 utilises this functionality to enable it to serve even deeply nested requests with just one SQL query, which lead to significant speedups especially where database connection latency was above 1ms.</p>\\n</div><!-- /col-12 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</section><!-- /odd -->\\n<!-- **************************************** -->\\n<section class='odd'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"data-store-independent\\\"><a href=\\\"#data-store-independent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Data-store independent</h1>\\n<p class='lead'>\\nBuild plugins for anything that Node.js can communicate with.\\n</p>\\n<p>We have extensive support for PostgreSQL already through the <code>graphql-build-pg</code>\\nmodule; this performs introspection of your database schema and automatically\\nbuilds a Relay-enabled GraphQL API from the tables it finds. Security is\\nhandled through PostgreSQL's GRANT system and Row Level Security features.</p>\\n</div><!-- /col-12 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</section><!-- /odd -->\\n<!-- **************************************** -->\\n<section class='even'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"get-started\\\"><a href=\\\"#get-started\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Get started</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> buildSchema<span class=\\\"token punctuation\\\">,</span> defaultPlugins <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"graphql-build\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> printSchema <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"graphql/utilities\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> schema <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">buildSchema</span><span class=\\\"token punctuation\\\">(</span>defaultPlugins<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">printSchema</span><span class=\\\"token punctuation\\\">(</span>schema<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<div class='d-flex justify-content-center'>\\n<a class='btn btn-primary btn-lg' href='/docs/getting-started/'>Get started &raquo;</a>\\n</div>\\n</div><!-- /col-12 -->\\n</div><!-- /container -->\\n</section><!-- /even -->\\n<!-- **************************************** -->\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"path\": \"/\",\n\t\t\t\t\t\"title\": \"Extensible GraphQL APIs through Plugins\",\n\t\t\t\t\t\"next\": null,\n\t\t\t\t\t\"nextText\": null,\n\t\t\t\t\t\"prev\": null,\n\t\t\t\t\t\"prevText\": null\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"layout\": \"marketing\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---index-1a00a50cdbadba39dee7.js","module.exports = {\n\t\"data\": {\n\t\t\"remark\": {\n\t\t\t\"html\": \"<header>\\n<div class='container'>\\n<h1 id=\\\"build-powerful-graphql-apis\\\"><a href=\\\"#build-powerful-graphql-apis\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Build Powerful GraphQL APIs</h1>\\n<p class='lead'>\\nGraphQL-Build provides you with a framework to build high-performance extensible GraphQL APIs by combining plugins and using advanced look-ahead features.\\n</p>\\n<div class='row'>\\n<div class='col-lg-6 col-12'>\\n<p>Build your schema with plugins  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token function\\\">buildSchema</span><span class=\\\"token punctuation\\\">(</span>plugins<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>type Person <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># @deprecated Use 'name' instead</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># The person's first name</span>\\n  <span class=\\\"token attr-name\\\">firstName</span><span class=\\\"token punctuation\\\">:</span> String\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># @deprecated Use 'name' instead</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># The person's last name</span>\\n  <span class=\\\"token attr-name\\\">lastName</span><span class=\\\"token punctuation\\\">:</span> String\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#...</span>\\n</code></pre>\\n      </div>\\n</div><!-- /col-6 -->\\n<div class='col-lg-6 col-12'>\\n<p>Transform your schema with ease  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>plugins<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>DeprecationFromCommentPlugin<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>type Person <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># The person's first name</span>\\n  <span class=\\\"token attr-name\\\">firstName</span><span class=\\\"token punctuation\\\">:</span> String <span class=\\\"token directive function\\\">@deprecated</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token attr-name\\\">reason</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Use 'name' instead\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># The person's last name</span>\\n  <span class=\\\"token attr-name\\\">lastName</span><span class=\\\"token punctuation\\\">:</span> String <span class=\\\"token directive function\\\">@deprecated</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token attr-name\\\">reason</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Use 'name' instead\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">#...</span>\\n</code></pre>\\n      </div>\\n</div><!-- /col-6 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</header>\\n<!-- **************************************** -->\\n<section class='odd'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"easy-integration\\\"><a href=\\\"#easy-integration\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Easy Integration</h1>\\n<p class='lead'>\\nIf you're already using the reference implementation of GraphQL from Facebook then you can add hooks to your schema with ease:\\n</p>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12 col-lg-6'>\\n<p><code>graphql</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"gatsby-highlight-code-line\\\"><span class=\\\"token keyword\\\">const</span> MyType <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">GraphQLObjectType</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n</span>  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'MyType'</span><span class=\\\"token punctuation\\\">,</span>\\n  fields<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    field1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      type<span class=\\\"token punctuation\\\">:</span> GraphQLString<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n</code></pre>\\n      </div>\\n</div><!-- /col-6 -->\\n<div class='col-12 col-lg-6'>\\n<p><code>graphql-build</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"gatsby-highlight-code-line\\\"><span class=\\\"token keyword\\\">const</span> MyType <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">newWithHooks</span><span class=\\\"token punctuation\\\">(</span>GraphQLObjectType<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n</span>  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'MyType'</span><span class=\\\"token punctuation\\\">,</span>\\n  fields<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    field1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      type<span class=\\\"token punctuation\\\">:</span> GraphQLString<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n</code></pre>\\n      </div>\\n</div><!-- /col-6 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</section><!-- /odd -->\\n<!-- **************************************** -->\\n<section class='even'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"fully-compatible\\\"><a href=\\\"#fully-compatible\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Fully compatible</h1>\\n<p class='lead'>\\nWe use the reference GraphQL implementation under the hood, so you know we're spec compliant.\\n</p>\\n<p> We do not use private APIs to manipulate the generated schema - only the public interfaces. You can use regular GraphQL objects in your generated Schema - you only need hooks for the parts you want callbacks for.</p>\\n</div><!-- /col-12 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</section><!-- /even -->\\n<!-- **************************************** -->\\n<section class='odd'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"first-class-schema-watching\\\"><a href=\\\"#first-class-schema-watching\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>First class schema watching</h1>\\n<p class='lead'>\\nAutomatically update your running GraphQL schema without the need to restart the server.\\n</p>\\n<p>For example: when your underlying data structure changes your GraphQL-Build plugins can trigger a rebuild event and you'll automatically be supplied with a fresh new GraphQL schema to replace the out-of-date one - no need to restart your server!</p>\\n</div><!-- /col-12 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</section><!-- /odd -->\\n<!-- **************************************** -->\\n<section class='even'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"performance-baked-in\\\"><a href=\\\"#performance-baked-in\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Performance baked in</h1>\\n<p class='lead'>\\nSay Goodbye to the N+1 problem; fewer round-trips means higher performance.\\n</p>\\n<p>By using our lookahead tools your code can know what's coming and make sure it requests the correct fields ahead of time, leading to fewer roundtrips and higher performance.</p>\\n<p>PostGraphQL v4 utilises this functionality to enable it to serve even deeply nested requests with just one SQL query, which lead to significant speedups especially where database connection latency was above 1ms.</p>\\n</div><!-- /col-12 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</section><!-- /odd -->\\n<!-- **************************************** -->\\n<section class='odd'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"data-store-independent\\\"><a href=\\\"#data-store-independent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Data-store independent</h1>\\n<p class='lead'>\\nBuild plugins for anything that Node.js can communicate with.\\n</p>\\n<p>We have extensive support for PostgreSQL already through the <code>graphql-build-pg</code>\\nmodule; this performs introspection of your database schema and automatically\\nbuilds a Relay-enabled GraphQL API from the tables it finds. Security is\\nhandled through PostgreSQL's GRANT system and Row Level Security features.</p>\\n</div><!-- /col-12 -->\\n</div><!-- /row -->\\n</div><!-- /container -->\\n</section><!-- /odd -->\\n<!-- **************************************** -->\\n<section class='even'>\\n<div class='container'>\\n<div class='row'>\\n<div class='col-12'>\\n<h1 id=\\\"get-started\\\"><a href=\\\"#get-started\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Get started</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> buildSchema<span class=\\\"token punctuation\\\">,</span> defaultPlugins <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"graphql-build\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> printSchema <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"graphql/utilities\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> schema <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">buildSchema</span><span class=\\\"token punctuation\\\">(</span>defaultPlugins<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">printSchema</span><span class=\\\"token punctuation\\\">(</span>schema<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<div class='d-flex justify-content-center'>\\n<a class='btn btn-primary btn-lg' href='/docs/getting-started/'>Get started &raquo;</a>\\n</div>\\n</div><!-- /col-12 -->\\n</div><!-- /container -->\\n</section><!-- /even -->\\n<!-- **************************************** -->\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"path\": \"/\",\n\t\t\t\t\"title\": \"Extensible GraphQL APIs through Plugins\",\n\t\t\t\t\"next\": null,\n\t\t\t\t\"nextText\": null,\n\t\t\t\t\"prev\": null,\n\t\t\t\t\"prevText\": null\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"layout\": \"marketing\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/index.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/index.json\n// module chunks = 9347362237655822000"],"sourceRoot":""}