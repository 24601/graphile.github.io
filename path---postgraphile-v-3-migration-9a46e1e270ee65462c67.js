webpackJsonp([87638492893048],{403:function(e,n){e.exports={data:{remark:{html:'<h2 id="migrating-from-postgraphql-v3"><a href="#migrating-from-postgraphql-v3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Migrating from PostGraphQL v3</h2>\n<p>Despite the fact that PostGraphile v4 has rewritten the <em>entire</em> GraphQL schema\ngeneration from scratch it is still broadly compatible with version 3. This\ndocument aims to outline solutions to issues you might face whilst upgrading.\nIf you face issues that you cannot solve, please do reach out!</p>\n<h3 id="short-list-of-breaking-changes"><a href="#short-list-of-breaking-changes" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Short list of breaking changes</h3>\n<p>These are things that can\'t be easily solved by just adding a command-line\nswitch or configuration parameter - if these are a problem for you then please\nget in touch and we\'ll discuss how one might go about fixing them (please read\nthe below first though!)</p>\n<ul>\n<li>Per-function <code>returns setof &#x3C;table></code> connection names have been removed in\nfavour of a shared connection with the tables themselves - only affects you\nif you have referenced the type name in queries/fragments</li>\n<li>What\'s nullable and what isn\'t has changed slightly - shouldn\'t cause an\nissue in most cases</li>\n<li>JWTs now have an audience of \'postgraphile\' rather than \'postgraphql\'</li>\n<li>If you have any tables ending with <code>_input</code>, <code>_patch</code>, <code>Input</code> or <code>Patch</code>\nthey will be renamed (see bottom of this article)</li>\n</ul>\n<h3 id="aside-project-financial-status"><a href="#aside-project-financial-status" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Aside: project financial status</h3>\n<p><strong><em>TL;DR: just read the bold bits!</em></strong></p>\n<p><strong>My work on PostGraphile is primarily self-funded</strong> - I take time\noff from earning money through contracting to work on PostGraphile.</p>\n<p>Recently <strong>I started <a href="https://www.patreon.com/benjie">a Patreon</a></strong> and the\nsupport from these 10 lovely folk has allowed me to spend more time working on\nPostGraphile. The reason that V4 is so compatible with V3 is because of the\nsupport of these patrons. üôè I would love to spend a LOT more time working on\nthe project, but to do that I need more supporters.</p>\n<p><strong>If your business uses PostGraphile, please invest in <a href="https://www.patreon.com/benjie">my\nPatreon</a></strong> - you\'ll benefit from faster fixes,\nmore features, and better performance. If you need a more commercially\njustifiable way of funding the project then please <strong>get in touch - I am\nworking on a commercial support offering</strong>. I\'m also open to other forms of\nsupport, and of course you can <a href="/support/">hire me</a> to give advice or build\nfeatures.</p>\n<p>Every bit of support, no matter how small, helps. Thanks for reading, back to\nthe migration guide...</p>\n<h3 id="deprecations"><a href="#deprecations" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Deprecations</h3>\n<h4 id="one-to-one-backward-relations"><a href="#one-to-one-backward-relations" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>One-to-one backward relations</h4>\n<p>These are now supported, so the previous one-to-many approximation for them has\nbeen deprecated. If you can do so we encourage you to remove the old API via\n<code>--legacy-relations=omit</code> (or <code>legacyRelations: \'omit\'</code> in the library\nversion); however by default we include both relations. If for some reason you\ndon\'t want the deprecation and you don\'t want the new behaviour (why?! It\'s so\nmuch better!) then you can enable the old behaviour only via\n<code>--legacy-relations=only</code>.</p>\n<p>Example:</p>\n<div class="gatsby-highlight">\n      <pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> foo <span class="token punctuation">(</span>\n  id <span class="token keyword">serial</span> <span class="token keyword">primary</span> <span class="token keyword">key</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">create</span> <span class="token keyword">table</span> bar <span class="token punctuation">(</span>\n  foo_id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">references</span> foo<span class="token punctuation">,</span>\n  name <span class="token keyword">text</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-graphql"><code><span class="token punctuation">{</span>\n  fooById<span class="token punctuation">(</span><span class="token attr-name">id</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment"># Old interface - deprecated</span>\n    <span class="token comment"># Note: this connection can only return at most one result so doesn\'t</span>\n    <span class="token comment"># deserve a connection</span>\n    barsByFooId <span class="token punctuation">{</span>\n      edges <span class="token punctuation">{</span>\n        node <span class="token punctuation">{</span>\n          name\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment"># New interface - no more indirection!</span>\n    barByFooId <span class="token punctuation">{</span>\n      name\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h3 id="breakdown-of-issues-you-might-face"><a href="#breakdown-of-issues-you-might-face" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Breakdown of issues you might face</h3>\n<h4 id="new-minimum-requirements"><a href="#new-minimum-requirements" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>New minimum requirements</h4>\n<p><strong>Problem</strong>: the system fails to start (or even install) because the requirements\nare not met.</p>\n<p><strong>Solution</strong>: upgrade your software</p>\n<ul>\n<li>Node.js v8.6+ required</li>\n<li>PostgreSQL 9.4+ required (v9.6+ recommended)</li>\n<li>GraphQL v0.9+ required</li>\n</ul>\n<p><strong>Reasoning</strong>: Node.js v8 is the current active LTS, v6 will be leaving active LTS\nstatus for maintenance mode in April 2018 (next month at time of writing), and\nsupporting 8.6+ as the base level gives us longevity whilst also allowing us to\nleverage native support for some of the powerful features of ES2017 and ES2018.</p>\n<h4 id="type-json-or-uuid-is-not-recognized"><a href="#type-json-or-uuid-is-not-recognized" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Type \'Json\' or \'Uuid\' is not recognized</h4>\n<p><strong>Problem</strong>: <code>Json</code> and <code>Uuid</code> have been renamed to <code>JSON</code> and <code>UUID</code> respectively</p>\n<p><strong>Solution</strong>: either modify your queries, or if you cannot do that then use the\n<code>--legacy-json-uuid</code> command line flag (or <code>legacyJsonUuid: true</code> library\noption) to change back to the old naming.</p>\n<p><strong>Reasoning</strong>: purely correctness/aesthetic. Sorry. üòÖ</p>\n<h4 id="connection-orderby-is-now-an-array"><a href="#connection-orderby-is-now-an-array" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Connection <code>orderBy</code> is now an array</h4>\n<p><strong>Problem</strong>: <code>orderBy</code> in connection fields now allows an array of order\nspecifications, so you can order by multiple things (like in SQL). However\ncertain clients might have a problem with this?</p>\n<p><strong>Solution</strong>: in most cases this should <em>not</em> cause an issue for existing queries -\naccording to <a href="http://facebook.github.io/graphql/October2016/#sec-Lists">3.1.7 in the GraphQL\nspecification</a>:</p>\n<blockquote>\n<p>If the value passed as an input to a list type is not a list and not the null\nvalue, it should be coerced as though the input was a list of size one, where\nthe value passed is the only item in the list.</p>\n</blockquote>\n<p>So any spec-compliant client should <strong>not</strong> have an issue with this.</p>\n<p><strong>Reasoning</strong>: people want to sort by multiple columns and since we could do it\nwith a non-breaking change (according to the above) we did!</p>\n<h4 id="expected-uuid-but-received-string"><a href="#expected-uuid-but-received-string" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Expected \'UUID\' but received \'String\'</h4>\n<p><strong>Problem</strong>: \'UUID\' is enabled by default</p>\n<p><strong>Solution</strong>: raise an issue and we can add a toggle to not enable it by default</p>\n<p><strong>Reasoning</strong>: named types are helpful</p>\n<h4 id="jwts-now-have-audience-postgraphile--issuer-postgraphile"><a href="#jwts-now-have-audience-postgraphile--issuer-postgraphile" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>JWTs now have audience \'postgraphile\' / issuer \'postgraphile\'</h4>\n<p><strong>Problem</strong>: we changed the audience with the rename of the library</p>\n<p><strong>Solution</strong>: if you can\'t update your config you can make sure your token objects\nreturned in the DB have <code>aud: \'postgraphql\', iss: \'postgraphql\'</code> (solution\nuntested - if you used this please let <a href="https://twitter.com/benjie">me</a> know\nwhether it worked or not)</p>\n<p><strong>Reasoning</strong>: we renamed the library, it\'d be confusing for new users to reference\nthe old name.</p>\n<h4 id="functions-now-use-table-connections-where-possible-again"><a href="#functions-now-use-table-connections-where-possible-again" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Functions now use table connections where possible (again!)</h4>\n<p><strong>Problem</strong>: functions that return setof a table type now use the same connection\nclass as the tables themselves do (just like PostGraphQL v2 did)</p>\n<p><strong>Solution</strong>: if this is a problem for you and you\'re unable to fix the queries,\nplease do get in touch!</p>\n<p><strong>Reasoning</strong>: performing pagination against multiple sources of the same table\ntype is much more complex if the connection types differ.</p>\n<p><strong>Potential future solution</strong>: have the connections implement a shared interface.</p>\n<h4 id="issues-with-nullables"><a href="#issues-with-nullables" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Issues with nullables</h4>\n<p><strong>Problem</strong>: some things are nullable that weren\'t, some things aren\'t nullable that were.</p>\n<p><strong>Solution</strong>: you can enable the <code>--no-setof-functions-include-nulls</code> CLI option\n(or <code>setofFunctionsIncludeNulls: false</code> library option) to reduce the nullables\nin the generated schema.</p>\n<p><strong>Reasoning</strong>:</p>\n<p>Functions like this can exist:</p>\n<div class="gatsby-highlight">\n      <pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">function</span> <span class="token number">c</span><span class="token punctuation">.</span>badly_behaved_function<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> setof <span class="token number">c</span><span class="token punctuation">.</span>person <span class="token keyword">as</span> $$\n<span class="token keyword">begin</span>\n  <span class="token keyword">return</span> query <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token number">c</span><span class="token punctuation">.</span>person <span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token keyword">asc</span> <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token keyword">next</span> <span class="token boolean">null</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> query <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token number">c</span><span class="token punctuation">.</span>person <span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">end</span><span class="token punctuation">;</span>\n$$ language plpgsql stable<span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>This function returns an array of <code>[{person}, null, {person}]</code> where <code>{person}</code>\nis a Person object. In PostGraphile because it is a <code>setof</code> function we treat\nit as a connection. As explained above, we now (like in version 2) use the same\nconnections for functions as for tables - as such these connections now have to\nsupport that the entries within them are nullable.</p>\n<p>If you don\'t like the nulls everywhere, I encourage you to use the <code>-N</code> /\n<code>--no-setof-functions-include-nulls</code> option mentioned above. Enabling this is a\nnon-breaking change, but disabling it <strong>is</strong> a breaking change - hence why it\nis not the default behaviour.</p>\n<h4 id="query-procedures-that-returns-setof-scalar-no-longer-have-pageinfo-nor-totalcount"><a href="#query-procedures-that-returns-setof-scalar-no-longer-have-pageinfo-nor-totalcount" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Query procedures that <code>returns setof &#x3C;scalar></code> no longer have <code>pageInfo</code> nor <code>totalCount</code></h4>\n<p><strong>Problem</strong>: as heading.</p>\n<p><strong>Solution</strong>: it\'s possibly to re-introduce support via a plugin - get in touch if\nyou need this</p>\n<p><strong>Reasoning</strong>: I did not feel it was particularly necessary and I\'ve only got\nlimited time to work on the project...</p>\n<h4 id="watch-schema-has-changed"><a href="#watch-schema-has-changed" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Watch schema has changed</h4>\n<p><em>Note that changes to the watch schema are NOT deemed to be breaking changes.</em></p>\n<p><strong>Problem</strong>: watch schema has changed to fix issues with dropping objects</p>\n<p><strong>Solution</strong>: most people shouldn\'t be affected by this (though they might want to\ndrop the old watch schema) because <code>--watch</code> is only intended for development\nuse and the new schema should install itself just fine. But if you had to\nmanually install the old watch schema, you\'ll need to manually install the <a href="https://github.com/graphile/graphile-build/blob/master/packages/graphile-build-pg/res/watch-fixtures.sql">new\none</a>\nin the same way</p>\n<p><strong>Reasoning</strong>: the old schema did not detect certain <code>DROP</code> commands and so adding\nstuff to your schema was fine, but removing them did not result in a refresh.</p>\n<h3 id="other-changes-that-may-affect-you"><a href="#other-changes-that-may-affect-you" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Other changes that may affect you</h3>\n<p>These are things that I doubt affect many people (if any) but I want to raise\nso you can check your own applications.</p>\n<h4 id="introspection-query-has-changed"><a href="#introspection-query-has-changed" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Introspection query has changed</h4>\n<p>And will probably continue to change. Changes to the introspection query are\nnot deemed to be breaking changes.</p>\n<h4 id="field-descriptions-have-changed-a-little"><a href="#field-descriptions-have-changed-a-little" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Field descriptions have changed a little</h4>\n<p>Field description changes are not deemed to be breaking changes.</p>\n<h4 id="case-changing-library-has-changed"><a href="#case-changing-library-has-changed" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Case changing library has changed</h4>\n<p>We replaced the library but this doesn\'t affect any of the tests. If this\ncauses you pain please submit an issue so we can add your fields/table names/etc to the tests\nto ensure this doesn\'t happen again.</p>\n<p>Workaround: it\'s possible to workaround this by providing your own inflection\nengine - get in touch if you need to do this as I\'ll try and make it a bit\neasier to do.</p>\n<h4 id="procedures-that-only-supported-orderby-natural-now-do-not-have-orderby-at-all"><a href="#procedures-that-only-supported-orderby-natural-now-do-not-have-orderby-at-all" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Procedures that only supported <code>orderBy: NATURAL</code> now <strong>do not have <code>orderBy</code> at all</strong>.</h4>\n<p>Though technically a breaking change, I\'m not deeming it as such because I\ndon\'t understand why you\'d explicitly set the orderBy for a field that only has\none value and that value is enabled by default.</p>\n<p>If this is a problem for you please get in touch and we can add support back\nvia a simple plugin.</p>\n<h4 id="using-a-return-type-postgraphile-user-cant-access"><a href="#using-a-return-type-postgraphile-user-cant-access" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using a return type PostGraphile user can\'t access</h4>\n<p><code>security definer</code> mutations that return a type from a schema that the\nrequesting PostgreSQL user is not allowed to view may now result in <code>permission denied for schema xxxx</code>.</p>\n<p><strong>Solution</strong>: don\'t do that üòâ</p>\n<h4 id="conflicting-tables-names---_input-_patch"><a href="#conflicting-tables-names---_input-_patch" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Conflicting tables names - <code>*_input</code>, <code>*_patch</code></h4>\n<p>Tables that end in <code>_input</code> or <code>_patch</code> such as <code>foo_input</code> will no longer be\nexported as <code>FooInput</code> but as <code>FooInputRecord</code> - this prevents collisions with\nmutation types on tables that share the prefix (e.g. table <code>foo</code>/<code>foos</code>\nrequires <code>FooInput</code> for its create mutation).</p>\n<p>Even if they don\'t clash <em>right now</em> there\'s a risk that they will clash in\nfuture; e.g. if you create the table <code>foo_bar_input</code> then creating\n<code>FooBarInput</code> and <code>FooBarInputInput</code> and <code>FooBarInputPatch</code> is fine... But if\nyou later add the table <code>foo_bar</code> then <code>FooBarInput</code> will clash. So renaming\nthe tables up front means that whether or not you add that table later it\'ll\nstill be fine without breaking existing functionality.</p>\n<h4 id="very-large-numbers"><a href="#very-large-numbers" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Very large numbers</h4>\n<p>Large integers (over 4 bytes) are still referred to as <code>BigInt</code>, large floats\n(those beyond IEEE754) are now called <code>BigFloat</code>. The specific boundaries in\nwhich these new types kick in may have changed - particularly for\n<code>DECIMAL</code>/<code>NUMERIC</code> types.</p>\n<h4 id="typings"><a href="#typings" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Typings</h4>\n<p>Flow and TypeScript typings are not to be trusted right now. They might work...\nThey might not. This will be resolved as part of an ongoing refactoring effort.</p>',frontmatter:{path:"/postgraphile/v3-migration/",title:"Migrating from PostGraphQL v3"}},nav:{edges:[{node:{id:"/Users/benjiegillam/Documents/graphile.org/src/data/nav.json absPath of file [0] >>> JSON",name:"graphile-build",sections:[{id:"guides",title:"Overview"},{id:"library-reference",title:"Using the Library"},{id:"plugin-reference",title:"Building a Plugin"}],pages:[{to:"/graphile-build/getting-started/",title:"Getting Started",sectionId:"guides"},{to:"/graphile-build/plugins/",title:"Plugins",sectionId:"guides"},{to:"/graphile-build/hooks/",title:"Hooks",sectionId:"guides"},{to:"/graphile-build/look-ahead/",title:"Look Ahead",sectionId:"guides"},{to:"/graphile-build/graphile-build/",title:"graphile-build",sectionId:"library-reference"},{to:"/graphile-build/schema-builder/",title:"SchemaBuilder",sectionId:"library-reference"},{to:"/graphile-build/plugin-options/",title:"Options",sectionId:"library-reference"},{to:"/graphile-build/default-plugins/",title:"Default Plugins",sectionId:"library-reference"},{to:"/graphile-build/omitting-plugins/",title:"Omitting Plugins",sectionId:"guides"},{
to:"/graphile-build/all-hooks/",title:"All Hooks",sectionId:"plugin-reference"},{to:"/graphile-build/build-object/",title:"Build Object",sectionId:"plugin-reference"},{to:"/graphile-build/context-object/",title:"Context Object",sectionId:"plugin-reference"},{to:"/graphile-build/schema-builder/",title:"SchemaBuilder",sectionId:"plugin-reference"}]}},{node:{id:"/Users/benjiegillam/Documents/graphile.org/src/data/nav.json absPath of file [1] >>> JSON",name:"postgraphile",sections:[{id:"overview",title:"Overview"},{id:"guides",title:"Guides"},{id:"usage",title:"Usage"}],pages:[{to:"/postgraphile/introduction/",title:"Introduction",sectionId:"overview"},{to:"/postgraphile/quick-start-guide/",title:"Quick Start Guide",sectionId:"overview"},{to:"/postgraphile/evaluating/",title:"Evaluating for your Project",sectionId:"guides"},{to:"/postgraphile/requirements/",title:"Requirements",sectionId:"overview"},{to:"/postgraphile/performance/",title:"Performance",sectionId:"overview"},{to:"/postgraphile/connections/",title:"Connections",sectionId:"overview"},{to:"/postgraphile/filtering/",title:"Filtering",sectionId:"overview"},{to:"/postgraphile/relations/",title:"Relations",sectionId:"overview"},{to:"/postgraphile/crud-mutations/",title:"CRUD Mutations",sectionId:"overview"},{to:"/postgraphile/computed-columns/",title:"Computed Columns",sectionId:"overview"},{to:"/postgraphile/custom-queries/",title:"Custom Queries",sectionId:"overview"},{to:"/postgraphile/custom-mutations/",title:"Custom Mutations",sectionId:"overview"},{to:"/postgraphile/security/",title:"Security",sectionId:"overview"},{to:"/postgraphile/introspection/",title:"Introspection",sectionId:"overview"},{to:"/postgraphile/extending/",title:"Extending PostGraphile",sectionId:"overview"},{to:"/postgraphile/jwt-guide/",title:"PostGraphile JWT Guide",sectionId:"guides"},{to:"/postgraphile/default-role/",title:"The Default Role",sectionId:"guides"},{to:"/postgraphile/procedures/",title:"PostgreSQL Procedures",sectionId:"guides"},{to:"/postgraphile/postgresql-schema-design/",title:"PostgreSQL Schema Design",sectionId:"guides"},{to:"/postgraphile/postgresql-indexes/",title:"PostgreSQL Indexes",sectionId:"guides"},{to:"/postgraphile/v4-new-features/",title:"v4 Feature Guide",sectionId:"guides"},{to:"/postgraphile/v3-migration/",title:"v3 ‚Üí v4 Migration Guide",sectionId:"guides"},{to:"/postgraphile/usage-cli/",title:"CLI Usage",sectionId:"usage"},{to:"/postgraphile/usage-library/",title:"Library Usage",sectionId:"usage"},{to:"/postgraphile/usage-schema/",title:"Schema-only Usage",sectionId:"usage"}]}},{node:{id:"/Users/benjiegillam/Documents/graphile.org/src/data/nav.json absPath of file [2] >>> JSON",name:"graphile-build-pg",sections:[{id:"usage",title:"Usage"}],pages:[{to:"/postgraphile/settings/",title:"Settings",sectionId:"usage"}]}}]}},pathContext:{layout:"page"}}}});
//# sourceMappingURL=path---postgraphile-v-3-migration-9a46e1e270ee65462c67.js.map