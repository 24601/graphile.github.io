{"version":3,"sources":["webpack:///path---graphile-build-pg-computed-columns-d63865464fbb0e1b0975.js","webpack:///./.cache/json/graphile-build-pg-computed-columns.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/graphile-build-pg-computed-columns.json","module","exports","data","remark","html","frontmatter","path","title","nav","edges","node","id","name","sections","pages","to","sectionId","pathContext","layout"],"mappings":"AAAAA,cAAc,qBAERC,4FACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,QAAUC,KAAA,i9KAA0kLC,aAA6FC,KAAA,uCAAAC,MAAA,qBAA0EC,KAAQC,QAAUC,MAAQC,GAAA,4FAAAC,KAAA,iBAAAC,WAAsIF,GAAA,SAAAJ,MAAA,WAAiCI,GAAA,oBAAAJ,MAAA,sBAAuDI,GAAA,mBAAAJ,MAAA,qBAAmDO,QAAYC,GAAA,mCAAAR,MAAA,kBAAAS,UAAA,WAAyFD,GAAA,2BAAAR,MAAA,UAAAS,UAAA,WAAyED,GAAA,yBAAAR,MAAA,QAAAS,UAAA,WAAqED,GAAA,8BAAAR,MAAA,aAAAS,UAAA,WAA+ED,GAAA,kCAAAR,MAAA,iBAAAS,UAAA,sBAAkGD,GAAA,kCAAAR,MAAA,gBAAAS,UAAA,sBAAiGD,GAAA,kCAAAR,MAAA,UAAAS,UAAA,sBAA2FD,GAAA,mCAAAR,MAAA,kBAAAS,UAAA,sBAAoGD,GAAA,6BAAAR,MAAA,YAAAS,UAAA,qBAAuFD,GAAA,gCAAAR,MAAA,eAAAS,UAAA,qBAA6FD,GAAA,kCAAAR,MAAA,iBAAAS,UAAA,wBAAoGN,MAAQC,GAAA,4FAAAC,KAAA,oBAAAC,WAAyIF,GAAA,SAAAJ,MAAA,WAA+BO,QAAYC,GAAA,mCAAAR,MAAA,eAAAS,UAAA,WAAsFD,GAAA,4BAAAR,MAAA,QAAAS,UAAA,WAAwED,GAAA,+BAAAR,MAAA,WAAAS,UAAA,WAA8ED,GAAA,kCAAAR,MAAA,cAAAS,UAAA,WAAoFD,GAAA,gCAAAR,MAAA,YAAAS,UAAA,WAAgFD,GAAA,qCAAAR,MAAA,iBAAAS,UAAA,WAA0FD,GAAA,uCAAAR,MAAA,mBAAAS,UAAA,WAA8FD,GAAA,qCAAAR,MAAA,iBAAAS,UAAA,WAA0FD,GAAA,uCAAAR,MAAA,mBAAAS,UAAA,WAA8FD,GAAA,+BAAAR,MAAA,WAAAS,UAAA,WAA8ED,GAAA,oCAAAR,MAAA,gBAAAS,UAAA,gBAA4FC,aAAgBC,OAAA","file":"path---graphile-build-pg-computed-columns-d63865464fbb0e1b0975.js","sourcesContent":["webpackJsonp([10353779828982186000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/graphile-build-pg-computed-columns.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"remark\":{\"html\":\"<h2 id=\\\"computed-columns\\\"><a href=\\\"#computed-columns\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Computed Columns</h2>\\n<p>You can create PostgreSQL functions that match the following criteria to add a\\nfield to a table type. This field could be simple (such as <code>name</code> constructed\\nfrom <code>first_name || ' ' || last_name</code>) or could return a composite type (e.g.\\ndatabase row) or even a whole connection. For this to work, the following rules\\napply to the function you create:</p>\\n<ul>\\n<li>name must begin with the name of the table it applies to, followed by an underscore (<code>_</code>)</li>\\n<li>first argument must be the table type</li>\\n<li>must return a named type - we do not currently support anonymous types</li>\\n<li>must NOT return <code>VOID</code></li>\\n<li>must be marked as <code>STABLE</code></li>\\n<li>must be defined in the same schema as the table</li>\\n</ul>\\n<p>This example creates two computed columns, one returning a simple varchar and\\nthe other a connection. Note that these methods could also accept additional\\narguments which would also automatically be added to the generated GraphQL\\nfield:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">create</span> <span class=\\\"token keyword\\\">table</span> my_schema<span class=\\\"token punctuation\\\">.</span>users <span class=\\\"token punctuation\\\">(</span>\\n  id <span class=\\\"token keyword\\\">serial</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">null</span> <span class=\\\"token keyword\\\">primary</span> <span class=\\\"token keyword\\\">key</span><span class=\\\"token punctuation\\\">,</span>\\n  first_name <span class=\\\"token keyword\\\">varchar</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  last_name <span class=\\\"token keyword\\\">varchar</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">null</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">create</span> <span class=\\\"token keyword\\\">table</span> my_schema<span class=\\\"token punctuation\\\">.</span>friendships <span class=\\\"token punctuation\\\">(</span>\\n  user_id <span class=\\\"token keyword\\\">integer</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  target_id <span class=\\\"token keyword\\\">integer</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token keyword\\\">primary</span> <span class=\\\"token keyword\\\">key</span> <span class=\\\"token punctuation\\\">(</span>user_id<span class=\\\"token punctuation\\\">,</span> target_id<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">create</span> <span class=\\\"token keyword\\\">function</span> my_schema<span class=\\\"token punctuation\\\">.</span>users_name<span class=\\\"token punctuation\\\">(</span>u my_schema<span class=\\\"token punctuation\\\">.</span>users<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">returns</span> <span class=\\\"token keyword\\\">varchar</span> <span class=\\\"token keyword\\\">as</span> $$\\n  <span class=\\\"token keyword\\\">select</span> u<span class=\\\"token punctuation\\\">.</span>first_name <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">' '</span> <span class=\\\"token operator\\\">||</span> u<span class=\\\"token punctuation\\\">.</span>last_name<span class=\\\"token punctuation\\\">;</span>\\n$$ <span class=\\\"token keyword\\\">language sql</span> stable<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">create</span> <span class=\\\"token keyword\\\">function</span> my_schema<span class=\\\"token punctuation\\\">.</span>users_friends<span class=\\\"token punctuation\\\">(</span>u my_schema<span class=\\\"token punctuation\\\">.</span>users<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">returns</span> setof my_schema<span class=\\\"token punctuation\\\">.</span>users <span class=\\\"token keyword\\\">as</span> $$\\n  <span class=\\\"token keyword\\\">select</span> <span class=\\\"token operator\\\">*</span>\\n  <span class=\\\"token keyword\\\">from</span> my_schema<span class=\\\"token punctuation\\\">.</span>users\\n  <span class=\\\"token keyword\\\">inner</span> <span class=\\\"token keyword\\\">join</span> my_schema<span class=\\\"token punctuation\\\">.</span>friendships\\n  <span class=\\\"token keyword\\\">on</span> <span class=\\\"token punctuation\\\">(</span>friendships<span class=\\\"token punctuation\\\">.</span>target_id <span class=\\\"token operator\\\">=</span> users<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">where</span> friendships<span class=\\\"token punctuation\\\">.</span>user_id <span class=\\\"token operator\\\">=</span> u<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">;</span>\\n$$ <span class=\\\"token keyword\\\">language sql</span> stable<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>TODO: ensure this example works</p>\",\"frontmatter\":{\"path\":\"/graphile-build-pg/computed-columns/\",\"title\":\"Computed Columns\"}},\"nav\":{\"edges\":[{\"node\":{\"id\":\"/Users/benjiegillam/Documents/graphile.com/src/data/nav.json absPath of file [0] >>> JSON\",\"name\":\"graphile-build\",\"sections\":[{\"id\":\"guides\",\"title\":\"Guides\"},{\"id\":\"library-reference\",\"title\":\"Library Reference\"},{\"id\":\"plugin-reference\",\"title\":\"Plugin Reference\"}],\"pages\":[{\"to\":\"/graphile-build/getting-started/\",\"title\":\"Getting Started\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build/plugins/\",\"title\":\"Plugins\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build/hooks/\",\"title\":\"Hooks\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build/look-ahead/\",\"title\":\"Look Ahead\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build/graphile-build/\",\"title\":\"graphile-build\",\"sectionId\":\"library-reference\"},{\"to\":\"/graphile-build/schema-builder/\",\"title\":\"SchemaBuilder\",\"sectionId\":\"library-reference\"},{\"to\":\"/graphile-build/plugin-options/\",\"title\":\"Options\",\"sectionId\":\"library-reference\"},{\"to\":\"/graphile-build/default-plugins/\",\"title\":\"Default Plugins\",\"sectionId\":\"library-reference\"},{\"to\":\"/graphile-build/all-hooks/\",\"title\":\"All Hooks\",\"sectionId\":\"plugin-reference\"},{\"to\":\"/graphile-build/build-object/\",\"title\":\"Build Object\",\"sectionId\":\"plugin-reference\"},{\"to\":\"/graphile-build/context-object/\",\"title\":\"Context Object\",\"sectionId\":\"plugin-reference\"}]}},{\"node\":{\"id\":\"/Users/benjiegillam/Documents/graphile.com/src/data/nav.json absPath of file [1] >>> JSON\",\"name\":\"graphile-build-pg\",\"sections\":[{\"id\":\"guides\",\"title\":\"Guides\"}],\"pages\":[{\"to\":\"/graphile-build-pg/introduction/\",\"title\":\"Introduction\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/usage/\",\"title\":\"Usage\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/settings/\",\"title\":\"Settings\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/connections/\",\"title\":\"Connections\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/relations/\",\"title\":\"Relations\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/crud-mutations/\",\"title\":\"CRUD Mutations\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/computed-columns/\",\"title\":\"Computed Columns\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/custom-queries/\",\"title\":\"Custom Queries\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/custom-mutations/\",\"title\":\"Custom Mutations\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/security/\",\"title\":\"Security\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/introspection/\",\"title\":\"Introspection\",\"sectionId\":\"guides\"}]}}]}},\"pathContext\":{\"layout\":\"page\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---graphile-build-pg-computed-columns-d63865464fbb0e1b0975.js","module.exports = {\"data\":{\"remark\":{\"html\":\"<h2 id=\\\"computed-columns\\\"><a href=\\\"#computed-columns\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Computed Columns</h2>\\n<p>You can create PostgreSQL functions that match the following criteria to add a\\nfield to a table type. This field could be simple (such as <code>name</code> constructed\\nfrom <code>first_name || ' ' || last_name</code>) or could return a composite type (e.g.\\ndatabase row) or even a whole connection. For this to work, the following rules\\napply to the function you create:</p>\\n<ul>\\n<li>name must begin with the name of the table it applies to, followed by an underscore (<code>_</code>)</li>\\n<li>first argument must be the table type</li>\\n<li>must return a named type - we do not currently support anonymous types</li>\\n<li>must NOT return <code>VOID</code></li>\\n<li>must be marked as <code>STABLE</code></li>\\n<li>must be defined in the same schema as the table</li>\\n</ul>\\n<p>This example creates two computed columns, one returning a simple varchar and\\nthe other a connection. Note that these methods could also accept additional\\narguments which would also automatically be added to the generated GraphQL\\nfield:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">create</span> <span class=\\\"token keyword\\\">table</span> my_schema<span class=\\\"token punctuation\\\">.</span>users <span class=\\\"token punctuation\\\">(</span>\\n  id <span class=\\\"token keyword\\\">serial</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">null</span> <span class=\\\"token keyword\\\">primary</span> <span class=\\\"token keyword\\\">key</span><span class=\\\"token punctuation\\\">,</span>\\n  first_name <span class=\\\"token keyword\\\">varchar</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  last_name <span class=\\\"token keyword\\\">varchar</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">null</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">create</span> <span class=\\\"token keyword\\\">table</span> my_schema<span class=\\\"token punctuation\\\">.</span>friendships <span class=\\\"token punctuation\\\">(</span>\\n  user_id <span class=\\\"token keyword\\\">integer</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  target_id <span class=\\\"token keyword\\\">integer</span> <span class=\\\"token operator\\\">not</span> <span class=\\\"token boolean\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token keyword\\\">primary</span> <span class=\\\"token keyword\\\">key</span> <span class=\\\"token punctuation\\\">(</span>user_id<span class=\\\"token punctuation\\\">,</span> target_id<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">create</span> <span class=\\\"token keyword\\\">function</span> my_schema<span class=\\\"token punctuation\\\">.</span>users_name<span class=\\\"token punctuation\\\">(</span>u my_schema<span class=\\\"token punctuation\\\">.</span>users<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">returns</span> <span class=\\\"token keyword\\\">varchar</span> <span class=\\\"token keyword\\\">as</span> $$\\n  <span class=\\\"token keyword\\\">select</span> u<span class=\\\"token punctuation\\\">.</span>first_name <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">' '</span> <span class=\\\"token operator\\\">||</span> u<span class=\\\"token punctuation\\\">.</span>last_name<span class=\\\"token punctuation\\\">;</span>\\n$$ <span class=\\\"token keyword\\\">language sql</span> stable<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">create</span> <span class=\\\"token keyword\\\">function</span> my_schema<span class=\\\"token punctuation\\\">.</span>users_friends<span class=\\\"token punctuation\\\">(</span>u my_schema<span class=\\\"token punctuation\\\">.</span>users<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">returns</span> setof my_schema<span class=\\\"token punctuation\\\">.</span>users <span class=\\\"token keyword\\\">as</span> $$\\n  <span class=\\\"token keyword\\\">select</span> <span class=\\\"token operator\\\">*</span>\\n  <span class=\\\"token keyword\\\">from</span> my_schema<span class=\\\"token punctuation\\\">.</span>users\\n  <span class=\\\"token keyword\\\">inner</span> <span class=\\\"token keyword\\\">join</span> my_schema<span class=\\\"token punctuation\\\">.</span>friendships\\n  <span class=\\\"token keyword\\\">on</span> <span class=\\\"token punctuation\\\">(</span>friendships<span class=\\\"token punctuation\\\">.</span>target_id <span class=\\\"token operator\\\">=</span> users<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">where</span> friendships<span class=\\\"token punctuation\\\">.</span>user_id <span class=\\\"token operator\\\">=</span> u<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">;</span>\\n$$ <span class=\\\"token keyword\\\">language sql</span> stable<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>TODO: ensure this example works</p>\",\"frontmatter\":{\"path\":\"/graphile-build-pg/computed-columns/\",\"title\":\"Computed Columns\"}},\"nav\":{\"edges\":[{\"node\":{\"id\":\"/Users/benjiegillam/Documents/graphile.com/src/data/nav.json absPath of file [0] >>> JSON\",\"name\":\"graphile-build\",\"sections\":[{\"id\":\"guides\",\"title\":\"Guides\"},{\"id\":\"library-reference\",\"title\":\"Library Reference\"},{\"id\":\"plugin-reference\",\"title\":\"Plugin Reference\"}],\"pages\":[{\"to\":\"/graphile-build/getting-started/\",\"title\":\"Getting Started\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build/plugins/\",\"title\":\"Plugins\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build/hooks/\",\"title\":\"Hooks\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build/look-ahead/\",\"title\":\"Look Ahead\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build/graphile-build/\",\"title\":\"graphile-build\",\"sectionId\":\"library-reference\"},{\"to\":\"/graphile-build/schema-builder/\",\"title\":\"SchemaBuilder\",\"sectionId\":\"library-reference\"},{\"to\":\"/graphile-build/plugin-options/\",\"title\":\"Options\",\"sectionId\":\"library-reference\"},{\"to\":\"/graphile-build/default-plugins/\",\"title\":\"Default Plugins\",\"sectionId\":\"library-reference\"},{\"to\":\"/graphile-build/all-hooks/\",\"title\":\"All Hooks\",\"sectionId\":\"plugin-reference\"},{\"to\":\"/graphile-build/build-object/\",\"title\":\"Build Object\",\"sectionId\":\"plugin-reference\"},{\"to\":\"/graphile-build/context-object/\",\"title\":\"Context Object\",\"sectionId\":\"plugin-reference\"}]}},{\"node\":{\"id\":\"/Users/benjiegillam/Documents/graphile.com/src/data/nav.json absPath of file [1] >>> JSON\",\"name\":\"graphile-build-pg\",\"sections\":[{\"id\":\"guides\",\"title\":\"Guides\"}],\"pages\":[{\"to\":\"/graphile-build-pg/introduction/\",\"title\":\"Introduction\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/usage/\",\"title\":\"Usage\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/settings/\",\"title\":\"Settings\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/connections/\",\"title\":\"Connections\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/relations/\",\"title\":\"Relations\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/crud-mutations/\",\"title\":\"CRUD Mutations\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/computed-columns/\",\"title\":\"Computed Columns\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/custom-queries/\",\"title\":\"Custom Queries\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/custom-mutations/\",\"title\":\"Custom Mutations\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/security/\",\"title\":\"Security\",\"sectionId\":\"guides\"},{\"to\":\"/graphile-build-pg/introspection/\",\"title\":\"Introspection\",\"sectionId\":\"guides\"}]}}]}},\"pathContext\":{\"layout\":\"page\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/graphile-build-pg-computed-columns.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/graphile-build-pg-computed-columns.json\n// module chunks = 10353779828982186000"],"sourceRoot":""}