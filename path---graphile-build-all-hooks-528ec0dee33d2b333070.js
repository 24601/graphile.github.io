webpackJsonp([0x74f67f0088406800],{"./node_modules/json-loader/index.js!./.cache/json/graphile-build-all-hooks.json":function(e,t){e.exports={data:{remark:{html:'<h2 id="all-hooks"><a href="#all-hooks" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>All Hooks</h2>\n<p>The following hooks are currently supported, but more may be added in future.\nTrying to add a hook for a hook name that does not exist will result in an\nerror.</p>\n<p><a href="https://github.com/graphile/graphile-build/blob/996e28f0af68f53e264170bd4528b6500ff3ef25/packages/graphile-build/SchemaBuilder.js#L11-L59">(See hooks in the source)</a></p>\n<ul>\n<li>\n<p><code>build</code>: The build object represents the current schema build and is passed\nto all hooks, hook the \'build\' event to extend this object.</p>\n</li>\n<li>\n<p><code>init</code>: The init event is triggered after <code>build</code> (which should not generate\nany GraphQL objects) and can be used to build common object types that may be\nuseful later. The argument to this is an empty object and should be passed\nthrough unmodified (it is ignored currently).</p>\n</li>\n<li>\n<p><code>GraphQLSchema</code>: This event defines the root-level schema; hook it to add <code>query</code>,\n<code>mutation</code>, <code>subscription</code> or similar GraphQL fields.</p>\n</li>\n<li>\n<p><code>GraphQLObjectType*</code>: When creating a GraphQLObjectType via\n<code>newWithHooks</code>, we\'ll execute, the following hooks:</p>\n<ul>\n<li><code>GraphQLObjectType</code> to add any root-level attributes, e.g. add a description</li>\n<li><code>GraphQLObjectType:interfaces</code> to add additional interfaces to this object type</li>\n<li><code>GraphQLObjectType:fields</code> to add additional fields to this object type (is\nran asynchronously and gets a reference to the final GraphQL Object as\n<code>Self</code> in the context)</li>\n<li><code>GraphQLObjectType:fields:field</code>: to add any root-level attributes to an\nindividual field, e.g. add a description</li>\n<li><code>GraphQLObjectType:fields:field:args</code> to add arguments to an individual field</li>\n</ul>\n</li>\n<li>\n<p><code>GraphQLInputObjectType*</code>: When creating a GraphQLInputObjectType via\n<code>newWithHooks</code>, we\'ll execute, the following hooks:</p>\n<ul>\n<li><code>GraphQLInputObjectType</code> to add any root-level attributes, e.g. add a description</li>\n<li><code>GraphQLInputObjectType:fields</code> to add additional fields to this object type (is\nran asynchronously and gets a reference to the final GraphQL Object as\n<code>Self</code> in the context)</li>\n<li><code>GraphQLInputObjectType:fields:field</code>: to customize an individual field from above</li>\n</ul>\n</li>\n<li>\n<p><code>GraphQLEnumType*</code>: When creating a GraphQLEnumType via <code>newWithHooks</code>,\nwe\'ll execute, the following hooks:</p>\n<ul>\n<li><code>GraphQLEnumType</code> to add any root-level attributes, e.g. add a description</li>\n<li><code>GraphQLEnumType:values</code> to add additional values</li>\n</ul>\n</li>\n</ul>\n<h3 id="input-types"><a href="#input-types" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Input types</h3>\n<p>Depending on the hook being called the input object might be an array (as in\nthe case of <code>GraphQLObjectType:interfaces</code>) or an object (as in all other\ncases, currently). More specifically, the types for each hook are:</p>\n<ul>\n<li>\n<p>build - a <code>Build</code> object (see below)</p>\n</li>\n<li>\n<p>init - an opaque object, please just return it verbatim</p>\n</li>\n<li>\n<p>GraphQLSchema - <a href="http://graphql.org/graphql-js/type/#graphqlschema"><code>GraphQLSchemaConfig</code></a></p>\n</li>\n<li>\n<p>GraphQLObjectType - <a href="http://graphql.org/graphql-js/type/#graphqlobjecttype"><code>GraphQLObjectTypeConfig</code></a></p>\n</li>\n<li>\n<p>GraphQLObjectType:interfaces - <a href="http://graphql.org/graphql-js/type/#graphqlinterfacetype">array of <code>GraphQLInterfaceType</code> instances</a></p>\n</li>\n<li>\n<p>GraphQLObjectType:fields - <a href="http://graphql.org/graphql-js/type/#graphqlobjecttype"><code>GraphQLFieldConfigMap</code></a></p>\n</li>\n<li>\n<p>GraphQLObjectType:fields:field - <a href="http://graphql.org/graphql-js/type/#graphqlobjecttype"><code>GraphQLFieldConfig</code></a></p>\n</li>\n<li>\n<p>GraphQLObjectType:fields:field:args - <a href="http://graphql.org/graphql-js/type/#graphqlobjecttype"><code>GraphQLFieldConfigArgumentMap</code></a></p>\n</li>\n<li>\n<p>GraphQLInputObjectType - <a href="http://graphql.org/graphql-js/type/#graphqlinputobjecttype"><code>GraphQLInputObjectTypeConfig</code></a></p>\n</li>\n<li>\n<p>GraphQLInputObjectType:fields - <a href="http://graphql.org/graphql-js/type/#graphqlinputobjecttype"><code>GraphQLInputObjectConfigFieldMap</code></a></p>\n</li>\n<li>\n<p>GraphQLInputObjectType:fields:field - <a href="http://graphql.org/graphql-js/type/#graphqlinputobjecttype"><code>GraphQLInputObjectFieldConfig</code></a></p>\n</li>\n<li>\n<p>GraphQLEnumType - <a href="http://graphql.org/graphql-js/type/#graphqlenumtype"><code>GraphQLEnumTypeConfig</code></a></p>\n</li>\n<li>\n<p>GraphQLEnumType:values - <a href="http://graphql.org/graphql-js/type/#graphqlenumtype"><code>GraphQLEnumValueConfigMap</code></a></p>\n</li>\n</ul>',frontmatter:{path:"/graphile-build/all-hooks/",title:"All Hooks"}},nav:{edges:[{node:{id:"/Users/benjiegillam/Documents/graphile.org/src/data/nav.json absPath of file [0] >>> JSON",name:"graphile-build",sections:[{id:"guides",title:"Overview"},{id:"library-reference",title:"Using the Library"},{id:"plugin-reference",title:"Building a Plugin"}],pages:[{to:"/graphile-build/getting-started/",title:"Getting Started",sectionId:"guides"},{to:"/graphile-build/plugins/",title:"Plugins",sectionId:"guides"},{to:"/graphile-build/hooks/",title:"Hooks",sectionId:"guides"},{to:"/graphile-build/look-ahead/",title:"Look Ahead",sectionId:"guides"},{to:"/graphile-build/graphile-build/",title:"graphile-build",sectionId:"library-reference"},{to:"/graphile-build/schema-builder/",title:"SchemaBuilder",sectionId:"library-reference"},{to:"/graphile-build/plugin-options/",title:"Options",sectionId:"library-reference"},{to:"/graphile-build/default-plugins/",title:"Default Plugins",sectionId:"library-reference"},{to:"/graphile-build/omitting-plugins/",title:"Omitting Plugins",sectionId:"guides"},{to:"/graphile-build/all-hooks/",title:"All Hooks",sectionId:"plugin-reference"},{to:"/graphile-build/build-object/",title:"Build Object",sectionId:"plugin-reference"},{to:"/graphile-build/context-object/",title:"Context Object",sectionId:"plugin-reference"},{to:"/graphile-build/schema-builder/",title:"SchemaBuilder",sectionId:"plugin-reference"}]}},{node:{id:"/Users/benjiegillam/Documents/graphile.org/src/data/nav.json absPath of file [1] >>> JSON",name:"postgraphile",sections:[{id:"overview",title:"Overview"},{id:"guides",title:"Guides"},{id:"usage",title:"Usage"}],pages:[{to:"/postgraphile/introduction/",title:"Introduction",sectionId:"overview"},{to:"/postgraphile/evaluating/",title:"Evaluating for your Project",sectionId:"guides"},{to:"/postgraphile/requirements/",title:"Requirements",sectionId:"overview"},{to:"/postgraphile/performance/",title:"Performance",sectionId:"overview"},{to:"/postgraphile/connections/",title:"Connections",sectionId:"overview"},{to:"/postgraphile/filtering/",title:"Filtering",sectionId:"overview"},{to:"/postgraphile/relations/",title:"Relations",sectionId:"overview"},{to:"/postgraphile/crud-mutations/",title:"CRUD Mutations",sectionId:"overview"},{to:"/postgraphile/computed-columns/",title:"Computed Columns",sectionId:"overview"},{to:"/postgraphile/custom-queries/",title:"Custom Queries",sectionId:"overview"},{to:"/postgraphile/custom-mutations/",title:"Custom Mutations",sectionId:"overview"},{to:"/postgraphile/security/",title:"Security",sectionId:"overview"},{to:"/postgraphile/introspection/",title:"Introspection",sectionId:"overview"},{to:"/postgraphile/extending/",title:"Extending PostGraphile",sectionId:"overview"},{to:"/postgraphile/jwt-guide/",title:"PostGraphile JWT Guide",sectionId:"guides"},{to:"/postgraphile/default-role/",title:"The Default Role",sectionId:"guides"},{to:"/postgraphile/procedures/",title:"PostgreSQL Procedures",sectionId:"guides"},{to:"/postgraphile/postgresql-schema-design/",title:"PostgreSQL Schema Design",sectionId:"guides"},{to:"/postgraphile/postgresql-indexes/",title:"PostgreSQL Indexes",sectionId:"guides"},{to:"/postgraphile/usage-cli/",title:"CLI Usage",sectionId:"usage"},{to:"/postgraphile/usage-library/",title:"Library Usage",sectionId:"usage"},{to:"/postgraphile/usage-schema/",title:"Schema-only Usage",sectionId:"usage"}]}},{node:{id:"/Users/benjiegillam/Documents/graphile.org/src/data/nav.json absPath of file [2] >>> JSON",name:"graphile-build-pg",sections:[{id:"usage",title:"Usage"}],pages:[{to:"/postgraphile/settings/",title:"Settings",sectionId:"usage"}]}}]}},pathContext:{layout:"page"}}}});
//# sourceMappingURL=path---graphile-build-all-hooks-528ec0dee33d2b333070.js.map